//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UbiNect.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UbiNect.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap BothArmsUpPosture {
            get {
                object obj = ResourceManager.GetObject("BothArmsUpPosture", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap BothHandsTogetherPosture {
            get {
                object obj = ResourceManager.GetObject("BothHandsTogetherPosture", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap LeftHandSwipeRight {
            get {
                object obj = ResourceManager.GetObject("LeftHandSwipeRight", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap LouderVolumePosture {
            get {
                object obj = ResourceManager.GetObject("LouderVolumePosture", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap LowerVolumePosture {
            get {
                object obj = ResourceManager.GetObject("LowerVolumePosture", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the left mouse-button to select two leg-joints (green) and the right mouse-button for the base-joint (red). The base-joint should lie between two leg-joints. You can deselect a joint by reclick it. We recommend to set a sufficient tolerance for a better recognition. The tolerance should not been changed during the adding process..
        /// </summary>
        internal static string posture_generate_hint_text {
            get {
                return ResourceManager.GetString("posture_generate_hint_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drag the joints in an approximate position. When specifying the constraints, the position can not be changed. If the posture has to be changed again, the set constraints are lost. To reset the posture, use the appropriate button below. .
        /// </summary>
        internal static string posture_generate_hint_text_in_edit {
            get {
                return ResourceManager.GetString("posture_generate_hint_text_in_edit", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Push {
            get {
                object obj = ResourceManager.GetObject("Push", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap RightHandSwipeLeft {
            get {
                object obj = ResourceManager.GetObject("RightHandSwipeLeft", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap TPosture {
            get {
                object obj = ResourceManager.GetObject("TPosture", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap XPosture {
            get {
                object obj = ResourceManager.GetObject("XPosture", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ZoomIn {
            get {
                object obj = ResourceManager.GetObject("ZoomIn", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ZoomOut {
            get {
                object obj = ResourceManager.GetObject("ZoomOut", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
